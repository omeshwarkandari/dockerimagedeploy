HPA (Horzontal Pod Scaler)
HPA helps in horizontal auto-scaling of the pods whenever the reource utilization recahed the threshhold limit as defined in the deployment file for the application
e.g. petclinic/templates/deployment.yaml, we have set that a container can utilize max 1 CPU and 500MB of memory and when the target utilization defined in the 
petclinic/templates/petclinic-hpa.yaml e.g. 50% then a new pod shoud be created automatically to keep the application runing to avoid the outage.
petclinic/templates/deployment.yaml:-
resources:
          limits:
            cpu: '1'
            memory: '500Mi'
          requests:
            cpu: '1'
            memory: '500Mi'
petclinic/templates/petclinic-hpa.yaml          
targetCPUUtilizationPercentage: 50

The pre-requisite of HPA is Metric-server.
Reter to README.MD of https://github.com/omeshwarkandari/metric-server.git



# Configure Horizontal Pod Autoscaler for CPU and Memory

1. Modify "deployment.yaml" with Resource limits
  
          resources:
          limits:
            cpu: '1'
            memory: "500Mi"
          requests:
            cpu: '1'
            memory: "500Mi"

2. Add yaml file "petclinic-hpa.yaml" in the helm chart to create pods when the CPU utilization reaches the target utilization.

          apiVersion: autoscaling/v1
          kind: HorizontalPodAutoscaler
          metadata:
            name: petclicnic-hpa
          spec:
            maxReplicas: 5
            minReplicas: 1
            scaleTargetRef:
              apiVersion: extensions/v1beta1
              kind: Deployment
              name: petclinic-deployment
            targetCPUUtilizationPercentage: 50

3. Add yaml file "petclinic-mem.yaml" in the helm chart to create pods when the Memory utilization reaches the target utilization.

          apiVersion: autoscaling/v2beta1
          kind: HorizontalPodAutoscaler
          metadata:
            name: petclinic-mem-hpa
          spec:
            maxReplicas: 5
            minReplicas: 1
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: petclinic-deployment
            metrics:
            - type: Resource
              resource:
                name: memory
                targetAverageUtilization: 50
                
We should get the pods created:
$ kubectl get hpa
NAME                REFERENCE                         TARGETS         MINPODS   MAXPODS   REPLICAS   AGE
petclicnic-hpa      Deployment/petclinic-deployment   <unknown>/50%   1         5         1          92m
petclinic-mem-hpa   Deployment/petclinic-deployment   <unknown>/50%   1         5         1          92m

4. Run the seige stress test from the Master.
## Install siege package on K8 Master
          yum -y install epel-release
          yum -y install siege

### Siege is a stress tester for HTTP/HTTPS
          siege -q -c 2 -t 2m http://ip:port
          q = quiet mode
          c = concurrent
          2m = time period

Note: replace http://ip:port with <Node Public IP where app pod craeted>:<forwarded port number> e.g. http://54.91.252.237:32750/
We can replace this with any website that is hosted inside the cluster.
